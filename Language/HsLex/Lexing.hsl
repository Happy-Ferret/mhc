%module Language.HsLex.Lexing %where

%%

case (Initial, Zs) => initialSpace
case (Initial, "\r\n" | '\r' | '\n' | '\f') => initialNewline
case (Initial, '.') => initialAny
case (Initial, "Lu") => initialLu
case (Initial, "Ll") => initialLl
case (Initial, "Lt") => initialLt
case (Initial, "Lm") => initialLm
case (Initial, "Lo") => initialLo
case (Initial, "Mn") => initialMn
case (Initial, "Mc") => initialMc
case (Initial, "Me") => initialMe
case (Initial, "Nd") => initialNd
case (Initial, "Nl") => initialNl
case (Initial, "No") => initialNo
case (Initial, "Pc") => initialPc
case (Initial, "Pd") => initialPd
case (Initial, "Ps") => initialPs
case (Initial, "Pe") => initialPe
case (Initial, "Pi") => initialPi
case (Initial, "Pf") => initialPf
case (Initial, "Po") => initialPo
case (Initial, "Sm") => initialSm
case (Initial, "Sc") => initialSc
case (Initial, "Sk") => initialSk
case (Initial, "So") => initialSo
case (Initial, "Zs") => initialZs
case (Initial, "Zl") => initialZl
case (Initial, "Zp") => initialZp
case (Initial, "Cc") => initialCc
case (Initial, "Cf") => initialCf
case (Initial, "Cs") => initialCs
case (Initial, "Co") => initialCo
case (Initial, "Cn") => initialCn
case (Initial, '^') => initialHat
case (Initial, '-') => initialHyphen
case (Initial, '[') => initialLBracket
case (Initial, ']') => initialRBracket
case (Initial, ',') => initialComma
case (Initial, "=>") => initialDArrow
case (Initial, "case") => initialCase
case (Initial, '*') => initialStar
case (Initial, '+') => initialPlus
case (Initial, '?') => initialQues
case (Initial, '(') => initialLParen
case (Initial, ')') => initialRParen
case (Initial, '"'([^'"']|"\\\"")*'"') => initialString
case (Initial, "'\\t'") => initialHT
case (Initial, "'\\n'") => initialLF
case (Initial, "'\\v'") => initialVT
case (Initial, "'\\f'") => initialFF
case (Initial, "'\\r'") => initialCR
case (Initial, "'\\''") => initialSingleQuote
case (Initial, '\''[^'\'']*'\'') => initialChar
case (Initial, "%{") => initialPLBrace
case (Initial, "%module") => initialPModule
case (Initial, "%%") => initialPP
case (Initial, "|") => initialPipe
case (Initial, "%where") => initialPWhere
case (Initial, "%}") => initialPRBrace
case (Initial, (Ll | '_')((Ll | '_') | Lu | Lt | Nd | '\'')*) => initialSemanticAction
case (Initial, (Lu | Lt)((Ll | '_') | Lu | Lt | Nd | '\'')*) => initialLexingState
case (Initial, .) => initialCode

case (Rule, Zs) => ruleSpace
case (Rule, "\r\n" | '\r' | '\n' | '\f') => ruleNewline
case (Rule, '.') => ruleAny
case (Rule, "Lu") => ruleLu
case (Rule, "Ll") => ruleLl
case (Rule, "Lt") => ruleLt
case (Rule, "Lm") => ruleLm
case (Rule, "Lo") => ruleLo
case (Rule, "Mn") => ruleMn
case (Rule, "Mc") => ruleMc
case (Rule, "Me") => ruleMe
case (Rule, "Nd") => ruleNd
case (Rule, "Nl") => ruleNl
case (Rule, "No") => ruleNo
case (Rule, "Pc") => rulePc
case (Rule, "Pd") => rulePd
case (Rule, "Ps") => rulePs
case (Rule, "Pe") => rulePe
case (Rule, "Pi") => rulePi
case (Rule, "Pf") => rulePf
case (Rule, "Po") => rulePo
case (Rule, "Sm") => ruleSm
case (Rule, "Sc") => ruleSc
case (Rule, "Sk") => ruleSk
case (Rule, "So") => ruleSo
case (Rule, "Zs") => ruleZs
case (Rule, "Zl") => ruleZl
case (Rule, "Zp") => ruleZp
case (Rule, "Cc") => ruleCc
case (Rule, "Cf") => ruleCf
case (Rule, "Cs") => ruleCs
case (Rule, "Co") => ruleCo
case (Rule, "Cn") => ruleCn
case (Rule, '^') => ruleHat
case (Rule, '-') => ruleHyphen
case (Rule, '[') => ruleLBracket
case (Rule, ']') => ruleRBracket
case (Rule, ',') => ruleComma
case (Rule, "=>") => ruleDArrow
case (Rule, "case") => ruleCase
case (Rule, '*') => ruleStar
case (Rule, '+') => rulePlus
case (Rule, '?') => ruleQues
case (Rule, '(') => ruleLParen
case (Rule, ')') => ruleRParen
case (Rule, '"'([^'"']|"\\\"")*'"') => ruleString
case (Rule, "'\\t'") => ruleHT
case (Rule, "'\\n'") => ruleLF
case (Rule, "'\\v'") => ruleVT
case (Rule, "'\\f'") => ruleFF
case (Rule, "'\\r'") => ruleCR
case (Rule, "'\\''") => ruleSingleQuote
case (Rule, '\''[^'\'']*'\'') => ruleChar
case (Rule, "%{") => rulePLBrace
case (Rule, "%module") => rulePModule
case (Rule, "%%") => rulePP
case (Rule, "|") => rulePipe
case (Rule, "%where") => rulePWhere
case (Rule, "%}") => rulePRBrace
case (Rule, (Ll | '_')((Ll | '_') | Lu | Lt | Nd | '\'')*) => ruleSemanticAction
case (Rule, (Lu | Lt)((Ll | '_') | Lu | Lt | Nd | '\'')*) => ruleLexingState
case (Rule, .) => ruleCode

case (Code, "%{") => codePLBrace
case (Code, "%module") => codePModule
case (Code, "%%") => codePP
case (Code, "%where") => codePWhere
case (Code, "%}") => codePRBrace
case (Code, .) => codeCode

%%
