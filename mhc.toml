files = [
  "Control/Monad/CodeGenerating.hs"
, "Control/Monad/Identity.hs"
, "Control/Monad/Trans.hs"
, "Control/Monad/Trans/CodeGenerating.hs"
, "Control/Monad/Trans/State.hs"
, "Control/Monad/State.hs"
, "Data/DList.hs"
, "Data/RBMap.hs"
, "Data/RBSet.hs"
, "Data/TOML.hs"
, "Data/TOML/Lexing.hs"
, "Data/TOML/Parsing.hs"
, "Data/JSON.hs"
, "Data/JSON/Lexing.hs"
, "Data/JSON/Parsing.hs"
, "Data/Scheme.hs"
, "Data/Scheme/Lexing.hs"
, "Data/Scheme/Parsing.hs"
, "Language/HsLex.hs"
, "Language/HsLex/Lexing.hs"
, "Language/HsLex/Parsing.hs"
, "Language/HsYacc.hs"
, "Language/HsYacc/Lexing.hs"
, "Language/HsYacc/Parsing.hs"
, "Language/Haskell2010/QId.hs"
, "Language/Haskell2010/Lexing.hs"
, "Language/Haskell2010/Layout.hs"
, "Language/Haskell2010/Parsing.hs"
, "Language/Haskell2010.hs"
, "tools/hslex.hs"
, "tools/hstokenize.hs"
, "tools/hsyacc.hs"
, "tools/mhc.hs"
, "examples/Hello.hs"
, "examples/lambda/Lexing.hs"
, "examples/lambda/Parsing.hs"
, "examples/lambda/Main.hs"
, "examples/Stack.hs"
, "examples/StackWithLayoutExpanded.hs"
, "haskell2010/Data/List.hs"
]
